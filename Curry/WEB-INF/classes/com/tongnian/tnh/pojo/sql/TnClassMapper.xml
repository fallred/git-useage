<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tongnian.tnh.dao.TnClassMapper" >
  <resultMap id="BaseResultMap" type="com.tongnian.tnh.pojo.TnClass" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="className" property="classname" jdbcType="VARCHAR" />
    <result column="classNo" property="classno" jdbcType="INTEGER" />
    <result column="school" property="school" jdbcType="INTEGER" />
    <result column="grade" property="grade" jdbcType="INTEGER" />
    <result column="classMember" property="classmember" jdbcType="INTEGER" />
    <result column="stauts" property="stauts" jdbcType="INTEGER" />
    <result column="classPhoto" property="classphoto" jdbcType="VARCHAR" />
    <result column="createdBy" property="createdby" jdbcType="INTEGER" />
    <result column="reserved" property="reserved" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, className, classNo, school, grade, classMember, stauts, classPhoto, createdBy, 
    reserved
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tongnian.tnh.pojo.TnClassExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tn_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tn_class
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tn_class
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tongnian.tnh.pojo.TnClassExample" >
    delete from tn_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tongnian.tnh.pojo.TnClass" >
    insert into tn_class (id, className, classNo, 
      school, grade, classMember, 
      stauts, classPhoto, createdBy, 
      reserved)
    values (#{id,jdbcType=INTEGER}, #{classname,jdbcType=VARCHAR}, #{classno,jdbcType=INTEGER}, 
      #{school,jdbcType=INTEGER}, #{grade,jdbcType=INTEGER}, #{classmember,jdbcType=INTEGER}, 
      #{stauts,jdbcType=INTEGER}, #{classphoto,jdbcType=VARCHAR}, #{createdby,jdbcType=INTEGER}, 
      #{reserved,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tongnian.tnh.pojo.TnClass" >
    insert into tn_class
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="classname != null" >
        className,
      </if>
      <if test="classno != null" >
        classNo,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="classmember != null" >
        classMember,
      </if>
      <if test="stauts != null" >
        stauts,
      </if>
      <if test="classphoto != null" >
        classPhoto,
      </if>
      <if test="createdby != null" >
        createdBy,
      </if>
      <if test="reserved != null" >
        reserved,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="classname != null" >
        #{classname,jdbcType=VARCHAR},
      </if>
      <if test="classno != null" >
        #{classno,jdbcType=INTEGER},
      </if>
      <if test="school != null" >
        #{school,jdbcType=INTEGER},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="classmember != null" >
        #{classmember,jdbcType=INTEGER},
      </if>
      <if test="stauts != null" >
        #{stauts,jdbcType=INTEGER},
      </if>
      <if test="classphoto != null" >
        #{classphoto,jdbcType=VARCHAR},
      </if>
      <if test="createdby != null" >
        #{createdby,jdbcType=INTEGER},
      </if>
      <if test="reserved != null" >
        #{reserved,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tongnian.tnh.pojo.TnClassExample" resultType="java.lang.Integer" >
    select count(*) from tn_class
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tn_class
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.classname != null" >
        className = #{record.classname,jdbcType=VARCHAR},
      </if>
      <if test="record.classno != null" >
        classNo = #{record.classno,jdbcType=INTEGER},
      </if>
      <if test="record.school != null" >
        school = #{record.school,jdbcType=INTEGER},
      </if>
      <if test="record.grade != null" >
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.classmember != null" >
        classMember = #{record.classmember,jdbcType=INTEGER},
      </if>
      <if test="record.stauts != null" >
        stauts = #{record.stauts,jdbcType=INTEGER},
      </if>
      <if test="record.classphoto != null" >
        classPhoto = #{record.classphoto,jdbcType=VARCHAR},
      </if>
      <if test="record.createdby != null" >
        createdBy = #{record.createdby,jdbcType=INTEGER},
      </if>
      <if test="record.reserved != null" >
        reserved = #{record.reserved,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tn_class
    set id = #{record.id,jdbcType=INTEGER},
      className = #{record.classname,jdbcType=VARCHAR},
      classNo = #{record.classno,jdbcType=INTEGER},
      school = #{record.school,jdbcType=INTEGER},
      grade = #{record.grade,jdbcType=INTEGER},
      classMember = #{record.classmember,jdbcType=INTEGER},
      stauts = #{record.stauts,jdbcType=INTEGER},
      classPhoto = #{record.classphoto,jdbcType=VARCHAR},
      createdBy = #{record.createdby,jdbcType=INTEGER},
      reserved = #{record.reserved,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tongnian.tnh.pojo.TnClass" >
    update tn_class
    <set >
      <if test="classname != null" >
        className = #{classname,jdbcType=VARCHAR},
      </if>
      <if test="classno != null" >
        classNo = #{classno,jdbcType=INTEGER},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=INTEGER},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="classmember != null" >
        classMember = #{classmember,jdbcType=INTEGER},
      </if>
      <if test="stauts != null" >
        stauts = #{stauts,jdbcType=INTEGER},
      </if>
      <if test="classphoto != null" >
        classPhoto = #{classphoto,jdbcType=VARCHAR},
      </if>
      <if test="createdby != null" >
        createdBy = #{createdby,jdbcType=INTEGER},
      </if>
      <if test="reserved != null" >
        reserved = #{reserved,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tongnian.tnh.pojo.TnClass" >
    update tn_class
    set className = #{classname,jdbcType=VARCHAR},
      classNo = #{classno,jdbcType=INTEGER},
      school = #{school,jdbcType=INTEGER},
      grade = #{grade,jdbcType=INTEGER},
      classMember = #{classmember,jdbcType=INTEGER},
      stauts = #{stauts,jdbcType=INTEGER},
      classPhoto = #{classphoto,jdbcType=VARCHAR},
      createdBy = #{createdby,jdbcType=INTEGER},
      reserved = #{reserved,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>