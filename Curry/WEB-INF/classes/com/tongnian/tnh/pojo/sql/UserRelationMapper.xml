<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tongnian.tnh.dao.UserRelationMapper" >
  <resultMap id="BaseResultMap" type="com.tongnian.tnh.pojo.UserRelation" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="friendId" property="friendid" jdbcType="INTEGER" />
    <result column="relation" property="relation" jdbcType="INTEGER" />
    <result column="remarkName" property="remarkname" jdbcType="VARCHAR" />
    <result column="friendGroup" property="friendgroup" jdbcType="INTEGER" />
    <result column="createdTime" property="createdtime" jdbcType="DATE" />
    <result column="reserved" property="reserved" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userId, friendId, relation, remarkName, friendGroup, createdTime, reserved
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tongnian.tnh.pojo.UserRelationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tn_userrelation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tn_userrelation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tn_userrelation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tongnian.tnh.pojo.UserRelationExample" >
    delete from tn_userrelation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tongnian.tnh.pojo.UserRelation" >
    insert into tn_userrelation (id, userId, friendId, 
      relation, remarkName, friendGroup, 
      createdTime, reserved)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{friendid,jdbcType=INTEGER}, 
      #{relation,jdbcType=INTEGER}, #{remarkname,jdbcType=VARCHAR}, #{friendgroup,jdbcType=INTEGER}, 
      #{createdtime,jdbcType=DATE}, #{reserved,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tongnian.tnh.pojo.UserRelation" >
    insert into tn_userrelation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="friendid != null" >
        friendId,
      </if>
      <if test="relation != null" >
        relation,
      </if>
      <if test="remarkname != null" >
        remarkName,
      </if>
      <if test="friendgroup != null" >
        friendGroup,
      </if>
      <if test="createdtime != null" >
        createdTime,
      </if>
      <if test="reserved != null" >
        reserved,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="friendid != null" >
        #{friendid,jdbcType=INTEGER},
      </if>
      <if test="relation != null" >
        #{relation,jdbcType=INTEGER},
      </if>
      <if test="remarkname != null" >
        #{remarkname,jdbcType=VARCHAR},
      </if>
      <if test="friendgroup != null" >
        #{friendgroup,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null" >
        #{createdtime,jdbcType=DATE},
      </if>
      <if test="reserved != null" >
        #{reserved,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tongnian.tnh.pojo.UserRelationExample" resultType="java.lang.Integer" >
    select count(*) from tn_userrelation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tn_userrelation
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.friendid != null" >
        friendId = #{record.friendid,jdbcType=INTEGER},
      </if>
      <if test="record.relation != null" >
        relation = #{record.relation,jdbcType=INTEGER},
      </if>
      <if test="record.remarkname != null" >
        remarkName = #{record.remarkname,jdbcType=VARCHAR},
      </if>
      <if test="record.friendgroup != null" >
        friendGroup = #{record.friendgroup,jdbcType=INTEGER},
      </if>
      <if test="record.createdtime != null" >
        createdTime = #{record.createdtime,jdbcType=DATE},
      </if>
      <if test="record.reserved != null" >
        reserved = #{record.reserved,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tn_userrelation
    set id = #{record.id,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      friendId = #{record.friendid,jdbcType=INTEGER},
      relation = #{record.relation,jdbcType=INTEGER},
      remarkName = #{record.remarkname,jdbcType=VARCHAR},
      friendGroup = #{record.friendgroup,jdbcType=INTEGER},
      createdTime = #{record.createdtime,jdbcType=DATE},
      reserved = #{record.reserved,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tongnian.tnh.pojo.UserRelation" >
    update tn_userrelation
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="friendid != null" >
        friendId = #{friendid,jdbcType=INTEGER},
      </if>
      <if test="relation != null" >
        relation = #{relation,jdbcType=INTEGER},
      </if>
      <if test="remarkname != null" >
        remarkName = #{remarkname,jdbcType=VARCHAR},
      </if>
      <if test="friendgroup != null" >
        friendGroup = #{friendgroup,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null" >
        createdTime = #{createdtime,jdbcType=DATE},
      </if>
      <if test="reserved != null" >
        reserved = #{reserved,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tongnian.tnh.pojo.UserRelation" >
    update tn_userrelation
    set userId = #{userid,jdbcType=INTEGER},
      friendId = #{friendid,jdbcType=INTEGER},
      relation = #{relation,jdbcType=INTEGER},
      remarkName = #{remarkname,jdbcType=VARCHAR},
      friendGroup = #{friendgroup,jdbcType=INTEGER},
      createdTime = #{createdtime,jdbcType=DATE},
      reserved = #{reserved,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
   <select id="findUserrelationByUidAndFid" resultMap="BaseResultMap"  parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tn_userrelation
    where userId = #{userid,jdbcType=INTEGER}
    and
	friendId =	 #{friendid,jdbcType=INTEGER}
	
  </select>
  <select id="findUserrelationByUidAndFidForOne" resultMap="BaseResultMap"  >
    select  
    <include refid="Base_Column_List" />
    from tn_userrelation
    
    where userId = #{0}
    and
	friendId =	 #{1}
	
  </select>
</mapper>